{
  "components": {
    "schemas": {
      "BadRequestDTO": {
        "properties": {
          "message": {
            "example": "Bad Request",
            "type": "string"
          },
          "statusCode": {
            "example": 400,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetAccessCodeSuccessfulResponseDto": {
        "properties": {
          "access_token": {
            "example": "ab12dc0ae1234a7898f9ff06d4f69gh",
            "type": "string"
          },
          "approvedLocations": {
            "description": "Approved locations to generate location access token",
            "example": ["l1C08ntBrFjLS0elLIYU"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "companyId": {
            "description": "Company ID",
            "example": "l1C08ntBrFjLS0elLIYU",
            "type": "string"
          },
          "expires_in": {
            "example": 86399,
            "type": "number"
          },
          "isBulkInstallation": {
            "example": "Bearer",
            "type": "boolean"
          },
          "locationId": {
            "description": "Location ID - Present only for Sub-Account Access Token",
            "example": "l1C08ntBrFjLS0elLIYU",
            "type": "string"
          },
          "planId": {
            "description": "Plan Id of the subscribed plan in paid apps.",
            "example": "l1C08ntBrFjLS0elLIYU",
            "type": "string"
          },
          "refresh_token": {
            "example": "xy34dc0ae1234a4858f9ff06d4f66ba",
            "type": "string"
          },
          "scope": {
            "example": "conversations/message.readonly conversations/message.write",
            "type": "string"
          },
          "token_type": {
            "example": "Bearer",
            "type": "string"
          },
          "userId": {
            "description": "USER ID - Represent user id of person who performed installation",
            "example": "l1C08ntBrFjLS0elLIYU",
            "type": "string"
          },
          "userType": {
            "example": "Location",
            "type": "string"
          }
        },
        "required": ["userId"],
        "type": "object"
      },
      "GetAccessCodebodyDto": {
        "properties": {
          "client_id": {
            "description": "The ID provided by GHL for your integration",
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "grant_type": {
            "enum": ["authorization_code", "refresh_token", "client_credentials"],
            "type": "string"
          },
          "redirect_uri": {
            "description": "The redirect URI for your application",
            "example": "https://myapp.com/oauth/callback/gohighlevel",
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "user_type": {
            "description": "The type of token to be requested",
            "enum": ["Company", "Location"],
            "example": "Location",
            "type": "string"
          }
        },
        "required": ["client_id", "client_secret", "grant_type"],
        "type": "object"
      },
      "GetInstalledLocationsSuccessfulResponseDto": {
        "properties": {
          "count": {
            "description": "Total location count under the company",
            "example": 1231,
            "type": "number"
          },
          "installToFutureLocations": {
            "description": "Boolean to control if user wants app to be automatically installed to future locations",
            "example": true,
            "type": "boolean"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/InstalledLocationSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetLocationAccessCodeBodyDto": {
        "properties": {
          "companyId": {
            "description": "Company Id of location you want to request token for",
            "type": "string"
          },
          "locationId": {
            "description": "The location ID for which you want to obtain accessToken",
            "type": "string"
          }
        },
        "required": ["companyId", "locationId"],
        "type": "object"
      },
      "GetLocationAccessTokenSuccessfulResponseDto": {
        "properties": {
          "access_token": {
            "description": "Location access token which can be used to authenticate & authorize API under following scope",
            "example": "ab12dc0ae1234a7898f9ff06d4f69gh",
            "type": "string"
          },
          "expires_in": {
            "description": "Time in seconds remaining for token to expire",
            "example": 86399,
            "type": "number"
          },
          "locationId": {
            "description": "Location ID - Present only for Sub-Account Access Token",
            "example": "l1C08ntBrFjLS0elLIYU",
            "type": "string"
          },
          "planId": {
            "description": "Plan Id of the subscribed plan in paid apps.",
            "example": "l1C08ntBrFjLS0elLIYU",
            "type": "string"
          },
          "scope": {
            "description": "Scopes the following accessToken have access to",
            "example": "conversations/message.readonly conversations/message.write",
            "type": "string"
          },
          "token_type": {
            "example": "Bearer",
            "type": "string"
          },
          "userId": {
            "description": "USER ID - Represent user id of person who performed installation",
            "example": "l1C08ntBrFjLS0elLIYU",
            "type": "string"
          }
        },
        "required": ["userId"],
        "type": "object"
      },
      "InstalledLocationSchema": {
        "properties": {
          "_id": {
            "description": "Location ID",
            "example": "0IHuJvc2ofPAAA8GzTRi",
            "type": "string"
          },
          "address": {
            "description": "Address linked to location",
            "example": "47 W 13th St, New York, NY 10011, USA",
            "type": "string"
          },
          "isInstalled": {
            "description": "Check if the requested app is installed for following location",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the location",
            "example": "John Deo",
            "type": "string"
          }
        },
        "required": ["_id", "name", "address"],
        "type": "object"
      },
      "UnauthorizedDTO": {
        "properties": {
          "error": {
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "example": "Invalid token: access token is invalid",
            "type": "string"
          },
          "statusCode": {
            "example": 401,
            "type": "number"
          }
        },
        "type": "object"
      },
      "UnprocessableDTO": {
        "properties": {
          "error": {
            "example": "Unprocessable Entity",
            "type": "string"
          },
          "message": {
            "example": ["Unprocessable Entity"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "statusCode": {
            "example": 422,
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Documentation for OAuth 2.0 API",
    "title": "OAuth 2.0",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/oauth/installedLocations": {
      "get": {
        "description": "This API allows you fetch location where app is installed upon",
        "operationId": "get-installed-location",
        "parameters": [
          {
            "description": "Parameter to skip the number installed locations",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": "0",
              "example": "1",
              "type": "string"
            }
          },
          {
            "description": "Parameter to limit the number installed locations",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "20",
              "example": "10",
              "type": "string"
            }
          },
          {
            "description": "Parameter to search for the installed location by name",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": {
              "example": "location name",
              "type": "string"
            }
          },
          {
            "description": "Filters out location which are installed for specified app under the specified company",
            "in": "query",
            "name": "isInstalled",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Parameter to search by the companyId",
            "in": "query",
            "name": "companyId",
            "required": true,
            "schema": {
              "example": "tDtDnQdgm2LXpyiqYvZ6",
              "type": "string"
            }
          },
          {
            "description": "Parameter to search by the appId",
            "in": "query",
            "name": "appId",
            "required": true,
            "schema": {
              "example": "tDtDnQdgm2LXpyiqYvZ6",
              "type": "string"
            }
          },
          {
            "description": "VersionId of the app",
            "in": "query",
            "name": "versionId",
            "required": false,
            "schema": {
              "example": "tDtDnQdgm2LXpyiqYvZ6",
              "type": "string"
            }
          },
          {
            "description": "Filters out locations which are installed for specified app in trial mode",
            "in": "query",
            "name": "onTrial",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Filters out location which are installed for specified app under the specified planId",
            "in": "query",
            "name": "planId",
            "required": false,
            "schema": {
              "example": true,
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstalledLocationsSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Agency-Access": []
          }
        ],
        "summary": "Get Location where app is installed",
        "tags": ["OAuth 2.0"]
      }
    },
    "/oauth/locationToken": {
      "post": {
        "description": "This API allows you to generate locationAccessToken from AgencyAccessToken",
        "operationId": "get-location-access-token",
        "parameters": [
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GetLocationAccessCodeBodyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationAccessTokenSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Agency-Access": []
          }
        ],
        "summary": "Get Location Access Token from Agency Token",
        "tags": ["OAuth 2.0"]
      }
    },
    "/oauth/token": {
      "post": {
        "description": "Use Access Tokens to access GoHighLevel resources on behalf of an authenticated location/company.",
        "operationId": "get-access-token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GetAccessCodebodyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessCodeSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Get Access Token",
        "tags": ["OAuth 2.0"]
      }
    }
  },
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "tags": [
    {
      "description": "Documentation for OAuth 2.0 API",
      "name": "OAuth 2.0"
    }
  ]
}

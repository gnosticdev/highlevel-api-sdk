{
  "components": {
    "schemas": {
      "BadRequestDTO": {
        "properties": {
          "message": {
            "example": "Bad Request",
            "type": "string"
          },
          "statusCode": {
            "example": 400,
            "type": "number"
          }
        },
        "type": "object"
      },
      "BusinessSchema": {
        "properties": {
          "address": {
            "example": "MIG 14, Delhi",
            "type": "string"
          },
          "city": {
            "example": "delhi",
            "type": "string"
          },
          "country": {
            "example": "IN",
            "type": "string"
          },
          "logoUrl": {
            "example": "https://dummyimage.com/o/locationPhotos%2Fve9EPM428h8vShlRW1KT.jpeg",
            "type": "string"
          },
          "name": {
            "example": "dentist",
            "type": "string"
          },
          "postalCode": {
            "example": "567654",
            "type": "string"
          },
          "state": {
            "example": "delhi",
            "type": "string"
          },
          "timezone": {
            "example": "America/Chicago",
            "type": "string"
          },
          "website": {
            "example": "https://gohighlevel.com/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCustomFieldsDTO": {
        "properties": {
          "acceptedFormat": {
            "example": [".pdf", ".docx", ".jpeg"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataType": {
            "example": "TEXT",
            "type": "string"
          },
          "isMultipleFile": {
            "example": false,
            "type": "boolean"
          },
          "maxNumberOfFiles": {
            "example": 2,
            "type": "number"
          },
          "model": {
            "description": "Model of the custom field you want to create",
            "enum": ["contact", "opportunity"],
            "example": "opportunity",
            "type": "string"
          },
          "name": {
            "example": "Custom Field",
            "type": "string"
          },
          "placeholder": {
            "example": "Placeholder Text",
            "type": "string"
          },
          "position": {
            "default": 0,
            "example": 0,
            "type": "number"
          },
          "textBoxListOptions": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/textBoxListOptionsSchema"
                },
                {
                  "$ref": "#/components/schemas/textBoxListOptionsSchema"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": ["name", "dataType"],
        "type": "object"
      },
      "CreateLocationDto": {
        "properties": {
          "address": {
            "description": "The address of the business for which sub-account is created",
            "example": "4th fleet street",
            "type": "string"
          },
          "city": {
            "description": "The city where the business is located for which sub-account is created",
            "example": "New York",
            "type": "string"
          },
          "companyId": {
            "description": "Company/Agency Id",
            "example": "UAXssdawIWAWD",
            "type": "string"
          },
          "country": {
            "description": "The 2 letter country-code in which the business is present for which sub-account is created",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "GB",
              "UA",
              "AE",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ],
            "example": "US",
            "type": "string"
          },
          "mailgun": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MailgunSchema"
              }
            ],
            "description": "The mailgun credentials for location"
          },
          "name": {
            "description": "The name for the sub-account/location",
            "example": "Mark Shoes",
            "type": "string"
          },
          "phone": {
            "description": "The phone number of the business for which sub-account is created with the appropriate country-code",
            "example": "+1410039940",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the business for which sub-account is created",
            "example": "567654",
            "type": "string"
          },
          "prospectInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProspectInfoDto"
              }
            ],
            "example": {
              "email": "john.doe@mail.com",
              "firstName": "John",
              "lastName": "Doe"
            }
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SettingsSchema"
              }
            ],
            "description": "The default settings for location"
          },
          "snapshotId": {
            "description": "The snapshot ID to be loaded into the location.",
            "example": "XXXXXXXXXXX",
            "type": "string"
          },
          "social": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SocialSchema"
              }
            ],
            "description": "The social media links for location"
          },
          "state": {
            "description": "The state in which the business operates for which sub-account is created",
            "example": "Illinois",
            "type": "string"
          },
          "timezone": {
            "description": "The timezone of the business for which sub-account is created",
            "example": "US/Central",
            "type": "string"
          },
          "twilio": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwilioSchema"
              }
            ],
            "description": "The twilio credentials for location"
          },
          "website": {
            "description": "The website of the business for which sub-account is created",
            "example": "https://yourwebsite.com",
            "type": "string"
          }
        },
        "required": ["name", "companyId"],
        "type": "object"
      },
      "CreateLocationSuccessfulResponseDto": {
        "properties": {
          "address": {
            "description": "The address of the business for which sub-account is created",
            "example": "4th fleet street",
            "type": "string"
          },
          "city": {
            "description": "The city where the business is located for which sub-account is created",
            "example": "New York",
            "type": "string"
          },
          "companyId": {
            "description": "Company/Agency Id",
            "example": "UAXssdawIWAWD",
            "type": "string"
          },
          "country": {
            "description": "The country in which the business is present for which sub-account is created",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "GB",
              "UA",
              "AE",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ],
            "example": "US",
            "type": "string"
          },
          "domain": {
            "example": "test.msgsndr.com",
            "type": "string"
          },
          "email": {
            "description": "The email for the sub-account/location",
            "example": "john.doe@mail.com",
            "type": "string"
          },
          "id": {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "type": "string"
          },
          "name": {
            "description": "The name for the sub-account/location",
            "example": "Mark Shoes",
            "type": "string"
          },
          "phone": {
            "description": "The phone number of the business for which sub-account is created",
            "example": "+1410039940",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the business for which sub-account is created",
            "example": "567654",
            "type": "string"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SettingsSchema"
              }
            ],
            "description": "The default settings for location"
          },
          "social": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SocialSchema"
              }
            ],
            "description": "The social media links for location"
          },
          "state": {
            "description": "The state in which the business operates for which sub-account is created",
            "example": "Illinois",
            "type": "string"
          },
          "timezone": {
            "description": "The timezone of the business for which sub-account is created",
            "example": "US/Central",
            "type": "string"
          },
          "website": {
            "description": "The website of the business for which sub-account is created",
            "example": "https://yourwebsite.com",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomFieldDeleteSuccessfulResponseDto": {
        "properties": {
          "succeded": {
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CustomFieldSchema": {
        "properties": {
          "dataType": {
            "example": "TEXT",
            "type": "string"
          },
          "fieldKey": {
            "example": "contact.pincode",
            "type": "string"
          },
          "id": {
            "example": "3sv6UEo51C9Bmpo1cKTq",
            "type": "string"
          },
          "isAllowedCustomOption": {
            "example": false,
            "type": "boolean"
          },
          "isMultiFileAllowed": {
            "example": true,
            "type": "boolean"
          },
          "locationId": {
            "example": "3sv6UEo51C9Bmpo1cKTq",
            "type": "string"
          },
          "maxFileLimit": {
            "example": 4,
            "type": "number"
          },
          "model": {
            "description": "Model of the custom field",
            "enum": ["contact", "opportunity"],
            "example": "opportunity",
            "type": "string"
          },
          "name": {
            "example": "pincode",
            "type": "string"
          },
          "picklistImageOptions": {
            "example": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "picklistOptions": {
            "example": ["first option"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "placeholder": {
            "example": "Pin code",
            "type": "string"
          },
          "position": {
            "example": 0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "CustomFieldSuccessfulResponseDto": {
        "properties": {
          "customField": {
            "$ref": "#/components/schemas/CustomFieldSchema"
          }
        },
        "type": "object"
      },
      "CustomFieldsListSuccessfulResponseDto": {
        "properties": {
          "customFields": {
            "items": {
              "$ref": "#/components/schemas/CustomFieldSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomValueDeleteSuccessfulResponseDto": {
        "properties": {
          "succeded": {
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CustomValueIdSuccessfulResponseDto": {
        "properties": {
          "customValue": {
            "$ref": "#/components/schemas/CustomValueSchema"
          }
        },
        "type": "object"
      },
      "CustomValueSchema": {
        "properties": {
          "fieldKey": {
            "example": "{{ custom_values.custom_field }}",
            "type": "string"
          },
          "id": {
            "example": "rWQ709Pb62syqGLceg1x",
            "type": "string"
          },
          "locationId": {
            "example": "rWQ709Pb6dasyqGLceg1x",
            "type": "string"
          },
          "name": {
            "example": "Custom Field",
            "type": "string"
          },
          "value": {
            "example": "Value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomValuesListSuccessfulResponseDto": {
        "properties": {
          "customValues": {
            "items": {
              "$ref": "#/components/schemas/CustomValueSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EmailTemplateSchema": {
        "properties": {
          "attachments": {
            "example": [],
            "items": {
              "type": "array"
            },
            "type": "array"
          },
          "html": {
            "example": "<html><head><style>body{font-family: sans-serif;}</style></head><body>testing</body></html>",
            "type": "string"
          },
          "subject": {
            "example": "subject text",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FileUploadBody": {
        "properties": {
          "id": {
            "description": "Id(Contact Id/Opportunity Id/Custom Field Id)",
            "example": "aWdODOBVOlH1RUFKWQke",
            "type": "string"
          },
          "maxFiles": {
            "description": "Max number of files",
            "example": "15",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FileUploadResponseDto": {
        "properties": {
          "meta": {
            "description": "Meta data of uploaded files",
            "example": [
              {
                "encoding": "7bit",
                "fieldname": "FileName.csv",
                "mimetype": "text/csv",
                "originalname": "FileName.csv",
                "size": 2061,
                "url": "https://highlevel-private-staging.storage.googleapis.com/location/Ar4JQgIyuzRsVuwD9RSK/custom-Field/UpZLmohmKEQYn0ymqplY/56e0d7fc-085c-4a07-9e1d-6d8fdac7e710.csv"
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uploadedFiles": {
            "description": "Uploaded files",
            "example": {
              "FileName.csv": "https://highlevel-private-staging.storage.googleapis.com/location/Ar4JQgIyuzRsVuwD9RSK/custom-Field/UpZLmohmKEQYn0ymqplY/56e0d7fc-085c-4a07-9e1d-6d8fdac7e710.csv"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetEmailTemplateResponseSchema": {
        "properties": {
          "dateAdded": {
            "example": "2022-01-27T12:31:19.679Z",
            "type": "string"
          },
          "id": {
            "example": "2yMwhgTNO19bpintqrap",
            "type": "string"
          },
          "locationId": {
            "example": "ve9EPM428h8vShlRW1KT",
            "type": "string"
          },
          "name": {
            "example": "email template",
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/EmailTemplateSchema"
          },
          "type": {
            "example": "email",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetLocationByIdSchema": {
        "properties": {
          "address": {
            "example": "ganthi nagar, gyanbabu chauk motihati",
            "type": "string"
          },
          "business": {
            "$ref": "#/components/schemas/BusinessSchema"
          },
          "city": {
            "example": "motihari",
            "type": "string"
          },
          "companyId": {
            "example": "5DP4iH6HLkQsiKESj6rh",
            "type": "string"
          },
          "country": {
            "example": "IN",
            "type": "string"
          },
          "domain": {
            "example": "test.msgsndr.com",
            "type": "string"
          },
          "email": {
            "example": "rane@due.com",
            "type": "string"
          },
          "firstName": {
            "example": "Dr. Rane",
            "type": "string"
          },
          "id": {
            "example": "ve9EPM428h8vShlRW1KT",
            "type": "string"
          },
          "lastName": {
            "example": "deo",
            "type": "string"
          },
          "logoUrl": {
            "example": "https://dummyimage.com/o/locationPhotos%2Fve9EPM428h8vShlRW1KT.jpeg",
            "type": "string"
          },
          "name": {
            "example": "dentist",
            "type": "string"
          },
          "phone": {
            "example": "+919039160788",
            "type": "string"
          },
          "postalCode": {
            "example": "567654",
            "type": "string"
          },
          "reseller": {
            "type": "object"
          },
          "settings": {
            "$ref": "#/components/schemas/SettingsSchema"
          },
          "social": {
            "$ref": "#/components/schemas/SocialSchema"
          },
          "state": {
            "example": "Loca",
            "type": "string"
          },
          "timezone": {
            "example": "America/Chicago",
            "type": "string"
          },
          "website": {
            "example": "https://gohighlevel.com/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetLocationByIdSuccessfulResponseDto": {
        "properties": {
          "location": {
            "$ref": "#/components/schemas/GetLocationByIdSchema"
          }
        },
        "type": "object"
      },
      "GetLocationSchema": {
        "properties": {
          "address": {
            "description": "The address of the business for which sub-account is created",
            "example": "4th fleet street",
            "type": "string"
          },
          "city": {
            "description": "The city where the business is located for which sub-account is created",
            "example": "New York",
            "type": "string"
          },
          "country": {
            "description": "The country in which the business is present for which sub-account is created",
            "example": "US",
            "type": "string"
          },
          "email": {
            "description": "The email for the sub-account/location",
            "example": "john.doe@mail.com",
            "type": "string"
          },
          "id": {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "type": "string"
          },
          "name": {
            "description": "The name for the sub-account/location",
            "example": "Mark Shoes",
            "type": "string"
          },
          "phone": {
            "description": "The phone number of the business for which sub-account is created",
            "example": "+1410039940",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the business for which sub-account is created",
            "example": "567654",
            "type": "string"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SettingsSchema"
              }
            ],
            "description": "The default settings for location"
          },
          "social": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SocialSchema"
              }
            ],
            "description": "The social media links for location"
          },
          "state": {
            "description": "The state in which the business operates for which sub-account is created",
            "example": "Illinois",
            "type": "string"
          },
          "timezone": {
            "description": "The timezone of the business for which sub-account is created",
            "example": "US/Central",
            "type": "string"
          },
          "website": {
            "description": "The website of the business for which sub-account is created",
            "example": "https://yourwebsite.com",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSmsTemplateResponseSchema": {
        "properties": {
          "dateAdded": {
            "example": "2022-01-27T12:31:19.679Z",
            "type": "string"
          },
          "id": {
            "example": "2yMwhgTNO19bpintqrap",
            "type": "string"
          },
          "locationId": {
            "example": "ve9EPM428h8vShlRW1KT",
            "type": "string"
          },
          "name": {
            "example": "sms template",
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/SmsTemplateSchema"
          },
          "type": {
            "example": "sms",
            "type": "string"
          },
          "urlAttachments": {
            "example": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetTemplatesSuccessfulResponseDto": {
        "properties": {
          "templates": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetSmsTemplateResponseSchema"
                },
                {
                  "$ref": "#/components/schemas/GetEmailTemplateResponseSchema"
                }
              ]
            },
            "type": "array"
          },
          "totalCount": {
            "example": 100,
            "type": "number"
          }
        },
        "type": "object"
      },
      "LocationDeletedSuccessfulResponseDto": {
        "properties": {
          "message": {
            "description": "Success message of the API",
            "example": "Deleted location with id: ve9EPM428h8vShlRW1KT",
            "type": "string"
          },
          "success": {
            "description": "Success status of the API",
            "example": true,
            "type": "boolean"
          }
        },
        "required": ["success", "message"],
        "type": "object"
      },
      "LocationTagDeleteSuccessfulResponseDto": {
        "properties": {
          "succeded": {
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LocationTagSuccessfulResponseDto": {
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/LocationTagsSchema"
          }
        },
        "type": "object"
      },
      "LocationTagsSchema": {
        "properties": {
          "id": {
            "example": "flGwEuzsfJOia1i1ikRN",
            "type": "string"
          },
          "locationId": {
            "example": "ve9EPM428h8vShlRW1KT",
            "type": "string"
          },
          "name": {
            "example": "minim aliquip anim",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocationTagsSuccessfulResponseDto": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/LocationTagsSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LocationTaskListSuccessfulResponseDto": {
        "properties": {
          "tasks": {
            "items": {
              "type": "array"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MailgunSchema": {
        "properties": {
          "apiKey": {
            "description": "API key provided by Mailgun",
            "example": "key-XXXXXXXXXXX",
            "type": "string"
          },
          "domain": {
            "description": "Domain connected with Mailgun",
            "example": "replies.yourdomain.com",
            "type": "string"
          }
        },
        "required": ["apiKey", "domain"],
        "type": "object"
      },
      "ProspectInfoDto": {
        "properties": {
          "email": {
            "description": "Email of the prospect",
            "example": "john.doe@mail.com",
            "type": "string"
          },
          "firstName": {
            "description": "First name of the prospect",
            "example": "John",
            "type": "string"
          },
          "lastName": {
            "description": "Last name of the prospect",
            "example": "Doe",
            "type": "string"
          }
        },
        "required": ["firstName", "lastName", "email"],
        "type": "object"
      },
      "SearchSuccessfulResponseDto": {
        "properties": {
          "locations": {
            "items": {
              "$ref": "#/components/schemas/GetLocationSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SettingsSchema": {
        "properties": {
          "allowDuplicateContact": {
            "example": false,
            "type": "boolean"
          },
          "allowDuplicateOpportunity": {
            "example": false,
            "type": "boolean"
          },
          "allowFacebookNameMerge": {
            "example": false,
            "type": "boolean"
          },
          "disableContactTimezone": {
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SmsTemplateSchema": {
        "properties": {
          "attachments": {
            "example": [],
            "items": {
              "type": "array"
            },
            "type": "array"
          },
          "body": {
            "example": "sms body",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SnapshotPutSchema": {
        "properties": {
          "id": {
            "description": "Snaptshot ID",
            "example": "XXXXXXXXXXX",
            "type": "string"
          },
          "override": {
            "default": false,
            "description": "If you want override all conflicted assets then pass true. Default value is false.",
            "example": false,
            "type": "boolean"
          }
        },
        "required": ["id"],
        "type": "object"
      },
      "SocialSchema": {
        "properties": {
          "blogRss": {
            "description": "Instagram URL",
            "example": "https://www.blogRss.com/",
            "type": "string"
          },
          "facebookUrl": {
            "description": "Facebook URL",
            "example": "https://www.facebook.com/",
            "type": "string"
          },
          "foursquare": {
            "description": "Foursquare URL",
            "example": "https://www.foursquare.com/",
            "type": "string"
          },
          "googlePlacesId": {
            "description": "Google Business Places ID",
            "example": "ChIJJGPdVbQTrjsRGUkefteUeFk",
            "type": "string"
          },
          "googlePlus": {
            "description": "Googleplus URL",
            "example": "https://www.googleplus.com/",
            "type": "string"
          },
          "instagram": {
            "description": "Instagram URL",
            "example": "https://www.instagram.com/",
            "type": "string"
          },
          "linkedIn": {
            "description": "LinkedIn URL",
            "example": "https://www.linkedIn.com/",
            "type": "string"
          },
          "pinterest": {
            "description": "Instagram URL",
            "example": "https://www.pinterest.com/",
            "type": "string"
          },
          "twitter": {
            "description": "Twitter URL",
            "example": "https://www.foutwitterrsquare.com/",
            "type": "string"
          },
          "yelp": {
            "description": "Yelp URL",
            "example": "https://www.yelp.com/",
            "type": "string"
          },
          "youtube": {
            "description": "Instagram URL",
            "example": "https://www.youtube.com/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskSearchParamsDto": {
        "properties": {
          "assignedTo": {
            "description": "Assigned User Ids",
            "example": ["0004Mtfsd11SBU1mBPgd"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "businessId": {
            "description": "Bussiness Id",
            "example": "6348240b98722079e5417332",
            "type": "string"
          },
          "completed": {
            "description": "Task Completed Or Pending",
            "example": true,
            "type": "boolean"
          },
          "contactId": {
            "description": "Contact Ids",
            "example": ["dSMo5jnqkJyh8YeGXM7k", "j5WESpmRj816VtyUuWwh"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "default": 25,
            "description": "Limit To Api",
            "example": 10,
            "type": "number"
          },
          "query": {
            "description": "Search Value",
            "example": "Task Name",
            "type": "string"
          },
          "skip": {
            "default": 0,
            "description": "Number Of Tasks To Skip",
            "example": 10,
            "type": "number"
          }
        },
        "type": "object"
      },
      "TwilioSchema": {
        "properties": {
          "authToken": {
            "description": "Auth token provided by Twilio",
            "example": "77_XXXXXXXXXXX",
            "type": "string"
          },
          "sid": {
            "description": "SID provided by Twilio",
            "example": "AC_XXXXXXXXXXX",
            "type": "string"
          }
        },
        "required": ["sid", "authToken"],
        "type": "object"
      },
      "UnauthorizedDTO": {
        "properties": {
          "error": {
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "example": "Invalid token: access token is invalid",
            "type": "string"
          },
          "statusCode": {
            "example": 401,
            "type": "number"
          }
        },
        "type": "object"
      },
      "UnprocessableDTO": {
        "properties": {
          "error": {
            "example": "Unprocessable Entity",
            "type": "string"
          },
          "message": {
            "example": ["Unprocessable Entity"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "statusCode": {
            "example": 422,
            "type": "number"
          }
        },
        "type": "object"
      },
      "UpdateCustomFieldsDTO": {
        "properties": {
          "acceptedFormat": {
            "example": [".pdf", ".docx", ".jpeg"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isMultipleFile": {
            "example": false,
            "type": "boolean"
          },
          "maxNumberOfFiles": {
            "example": 2,
            "type": "number"
          },
          "model": {
            "description": "Model of the custom field you want to update",
            "enum": ["contact", "opportunity"],
            "example": "opportunity",
            "type": "string"
          },
          "name": {
            "example": "Custom Field",
            "type": "string"
          },
          "placeholder": {
            "example": "Placeholder Text",
            "type": "string"
          },
          "position": {
            "default": 0,
            "example": 0,
            "type": "number"
          },
          "textBoxListOptions": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/textBoxListOptionsSchema"
                },
                {
                  "$ref": "#/components/schemas/textBoxListOptionsSchema"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": ["name"],
        "type": "object"
      },
      "UpdateLocationDto": {
        "properties": {
          "address": {
            "description": "The address of the business for which sub-account is created",
            "example": "4th fleet street",
            "type": "string"
          },
          "city": {
            "description": "The city where the business is located for which sub-account is created",
            "example": "New York",
            "type": "string"
          },
          "companyId": {
            "description": "Company/Agency Id",
            "example": "UAXssdawIWAWD",
            "type": "string"
          },
          "country": {
            "description": "The country in which the business is present for which sub-account is created",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "GB",
              "UA",
              "AE",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ],
            "example": "US",
            "type": "string"
          },
          "mailgun": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MailgunSchema"
              }
            ],
            "description": "The mailgun credentials for location"
          },
          "name": {
            "description": "The name for the sub-account/location",
            "example": "Mark Shoes",
            "type": "string"
          },
          "phone": {
            "description": "The phone number of the business for which sub-account is created",
            "example": "+1410039940",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the business for which sub-account is created",
            "example": "567654",
            "type": "string"
          },
          "prospectInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProspectInfoDto"
              }
            ],
            "example": {
              "email": "john.doe@mail.com",
              "firstName": "John",
              "lastName": "Doe"
            }
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SettingsSchema"
              }
            ],
            "description": "The default settings for location"
          },
          "snapshot": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SnapshotPutSchema"
              }
            ],
            "description": "The snapshot to be updated in the location."
          },
          "social": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SocialSchema"
              }
            ],
            "description": "The social media links for location"
          },
          "state": {
            "description": "The state in which the business operates for which sub-account is created",
            "example": "Illinois",
            "type": "string"
          },
          "timezone": {
            "description": "The timezone of the business for which sub-account is created",
            "example": "US/Central",
            "type": "string"
          },
          "twilio": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwilioSchema"
              }
            ],
            "description": "The twilio credentials for location"
          },
          "website": {
            "description": "The website of the business for which sub-account is created",
            "example": "https://yourwebsite.com",
            "type": "string"
          }
        },
        "required": ["companyId"],
        "type": "object"
      },
      "customValuesDTO": {
        "properties": {
          "name": {
            "example": "Custom Field Name",
            "type": "string"
          },
          "value": {
            "example": "Value",
            "type": "string"
          }
        },
        "required": ["name", "value"],
        "type": "object"
      },
      "tagBody": {
        "properties": {
          "name": {
            "description": "Tag name",
            "example": "Tag",
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      },
      "textBoxListOptionsSchema": {
        "properties": {
          "label": {
            "example": "First",
            "type": "string"
          },
          "prefillValue": {
            "example": "",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Agency-Access": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Agency (OR) Private Integration Token of Agency.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      },
      "Location-Access": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      },
      "bearer": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Documentation for Sub-Account (Formerly location) API",
    "title": "Sub-Account (Formerly location) API",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/locations/": {
      "post": {
        "description": "<div>\n                  <p>Create a new Sub-Account (Formerly Location) based on the data provided</p> \n                  <div>\n                    <span style= \"display: inline-block;\n                                width: 25px; height: 25px;\n                                background-color: yellow;\n                                color: black;\n                                font-weight: bold;\n                                font-size: 24px;\n                                text-align: center;\n                                line-height: 22px;\n                                border: 2px solid black;\n                                border-radius: 10%;\n                                margin-right: 10px;\">\n                                !\n                      </span>\n                      <span>\n                        <strong>\n                          This feature is only available on Agency Pro ($497) plan.\n                        </strong>\n                      </span>\n                  </div>\n                </div>\n    ",
        "operationId": "create-location",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Agency-Access": []
          }
        ],
        "summary": "Create Sub-Account (Formerly Location)",
        "tags": ["Sub-Account (Formerly Location)"]
      }
    },
    "/locations/search": {
      "get": {
        "description": "Search Sub-Account (Formerly Location)",
        "operationId": "search-locations",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "The company/agency id on which you want to perform the search",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "in": "query",
            "name": "companyId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The value by which the results should be skipped. Default will be 0",
            "example": "1",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": "0",
              "type": "string"
            }
          },
          {
            "description": "The value by which the results should be limited. Default will be 10",
            "example": "10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "10",
              "type": "string"
            }
          },
          {
            "description": "The order in which the results should be returned - Allowed values asc, desc. Default will be asc",
            "example": "asc",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "default": "asc",
              "type": "string"
            }
          },
          {
            "example": "johndoe@mail.com",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Agency-Access": []
          },
          {
            "Location-Access": []
          }
        ],
        "summary": "Search",
        "tags": ["Search"]
      }
    },
    "/locations/{locationId}": {
      "delete": {
        "description": "Delete a Sub-Account (Formerly Location) from the Agency",
        "operationId": "delete-location",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean value to indicate whether to delete Twilio Account or not",
            "example": false,
            "in": "query",
            "name": "deleteTwilioAccount",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDeletedSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Agency-Access": []
          }
        ],
        "summary": "Delete Sub-Account (Formerly Location)",
        "tags": ["Sub-Account (Formerly Location)"]
      },
      "get": {
        "description": "Get details of a Sub-Account (Formerly Location) by passing the sub-account id",
        "operationId": "get-location",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationByIdSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Get Sub-Account (Formerly Location)",
        "tags": ["Sub-Account (Formerly Location)"]
      },
      "put": {
        "description": "Update a Sub-Account (Formerly Location) based on the data provided",
        "operationId": "put-location",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful update response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Agency-Access": []
          }
        ],
        "summary": "Put Sub-Account (Formerly Location)",
        "tags": ["Sub-Account (Formerly Location)"]
      }
    },
    "/locations/{locationId}/customFields": {
      "get": {
        "description": "Get Custom Fields",
        "operationId": "get-custom-fields",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Model of the custom field you want to retrieve",
            "example": "opportunity",
            "in": "query",
            "name": "model",
            "required": false,
            "schema": {
              "enum": ["contact", "opportunity", "all"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsListSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get Custom Fields",
        "tags": ["Custom Field"]
      },
      "post": {
        "description": "Create Custom Field",
        "operationId": "create-custom-field",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomFieldsDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create Custom Field",
        "tags": ["Custom Field"]
      }
    },
    "/locations/{locationId}/customFields/upload": {
      "post": {
        "description": "Uploads File to customFields",
        "operationId": "upload-file-customFields",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileUploadBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Uploads File to customFields",
        "tags": ["Custom Field"]
      }
    },
    "/locations/{locationId}/customFields/{id}": {
      "delete": {
        "description": "Delete Custom Field",
        "operationId": "delete-custom-field",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Custom Field Id",
            "example": "00NhGCcN1tlO8ZHcu7Wb",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDeleteSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Custom Field",
        "tags": ["Custom Field"]
      },
      "get": {
        "description": "Get Custom Field",
        "operationId": "get-custom-field",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "example": "ve9EPM428h8vShlRW1KT",
              "type": "string"
            }
          },
          {
            "description": "Custom Field Id or Field Key (e.g. \"contact.first_name\" or \"opportunity.pipeline_id\")",
            "examples": {
              "field_key": {
                "summary": "Custom Field Key",
                "value": "contact.first_name"
              },
              "id": {
                "summary": "Custom Field ID",
                "value": "00NhGCcN1tlO8ZHcu7Wb"
              }
            },
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get Custom Field",
        "tags": ["Custom Field"]
      },
      "put": {
        "description": "Update Custom Field",
        "operationId": "update-custom-field",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Custom Field Id",
            "example": "00NhGCcN1tlO8ZHcu7Wb",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomFieldsDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update Custom Field",
        "tags": ["Custom Field"]
      }
    },
    "/locations/{locationId}/customValues": {
      "get": {
        "description": "Get Custom Values",
        "operationId": "get-custom-values",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomValuesListSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get Custom Values",
        "tags": ["Custom Value"]
      },
      "post": {
        "description": "Create Custom Value",
        "operationId": "create-custom-value",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customValuesDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomValueIdSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create Custom Value",
        "tags": ["Custom Value"]
      }
    },
    "/locations/{locationId}/customValues/{id}": {
      "delete": {
        "description": "Delete Custom Value",
        "operationId": "delete-custom-value",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Custom Value Id",
            "example": "kOBjMVAJhFuUeYIojVet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomValueDeleteSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Custom Value",
        "tags": ["Custom Value"]
      },
      "get": {
        "description": "Get Custom Value",
        "operationId": "get-custom-value",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Custom Value Id",
            "example": "kOBjMVAJhFuUeYIojVet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomValueIdSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get Custom Value",
        "tags": ["Custom Value"]
      },
      "put": {
        "description": "Update Custom Value",
        "operationId": "update-custom-value",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Custom Value Id",
            "example": "kOBjMVAJhFuUeYIojVet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customValuesDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomValueIdSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update Custom Value",
        "tags": ["Custom Value"]
      }
    },
    "/locations/{locationId}/tags": {
      "get": {
        "description": "Get Sub-Account (Formerly Location) Tags",
        "operationId": "get-location-tags",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationTagsSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get Tags",
        "tags": ["Tags"]
      },
      "post": {
        "description": "Create tag",
        "operationId": "create-tag",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tagBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationTagSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create Tag",
        "tags": ["Tags"]
      }
    },
    "/locations/{locationId}/tags/{tagId}": {
      "delete": {
        "description": "Delete tag",
        "operationId": "delete-tag",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tag Id",
            "example": "flGwEuzsfJOia1i1ikRN",
            "in": "path",
            "name": "tagId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationTagDeleteSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete tag",
        "tags": ["Tags"]
      },
      "get": {
        "description": "Get tag by id",
        "operationId": "get-tag-by-id",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tag Id",
            "example": "flGwEuzsfJOia1i1ikRN",
            "in": "path",
            "name": "tagId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationTagSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get tag by id",
        "tags": ["Tags"]
      },
      "put": {
        "description": "Update tag",
        "operationId": "update-tag",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tag Id",
            "example": "flGwEuzsfJOia1i1ikRN",
            "in": "path",
            "name": "tagId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tagBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationTagSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update tag",
        "tags": ["Tags"]
      }
    },
    "/locations/{locationId}/tasks/search": {
      "post": {
        "description": "Task Search",
        "operationId": "task-search",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskSearchParamsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationTaskListSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Task Search Filter",
        "tags": ["Tasks Search"]
      }
    },
    "/locations/{locationId}/templates": {
      "get": {
        "description": "GET all or email/sms templates",
        "operationId": "GET-all-or-email-sms-templates",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "example": false,
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "example": "1",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": "0",
              "type": "string"
            }
          },
          {
            "example": "25",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "25",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": ["sms", "email", "whatsapp"],
              "type": "string"
            }
          },
          {
            "description": "Origin Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "query",
            "name": "originId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplatesSuccessfulResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "GET all or email/sms templates",
        "tags": ["Template"]
      }
    },
    "/locations/{locationId}/templates/{id}": {
      "delete": {
        "description": "DELETE an email/sms template",
        "operationId": "DELETE-an-email-sms-template",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Template Id",
            "example": "ve9EPM428h8vShlRW1KT",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "DELETE an email/sms template",
        "tags": ["Template"]
      }
    },
    "/locations/{locationId}/timezones": {
      "get": {
        "description": "Fetch the available timezones",
        "operationId": "get-timezones",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "Location-Access": []
          }
        ],
        "summary": "Fetch Timezones",
        "tags": ["Timezone"]
      }
    }
  },
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "tags": [
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Location"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Location Tags"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Custom Field"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Custom Value"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Template"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Tags Search"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Location Notes"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Location Tasks"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Location Search"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Custom Field Search"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Location Keys"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Labs"
    },
    {
      "description": "Documentation for Sub-Account (Formerly location) API",
      "name": "Conversation Channel"
    }
  ]
}
